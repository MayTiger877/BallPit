name: Cross-platform JUCE Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JUCE_VERSION: 8.0.8

jobs:
  build:
    name: Build - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-14
            pluginval-binary: pluginval.app/Contents/MacOS/pluginval
            extra-flags: -G Ninja -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
          - name: Windows
            os: windows-latest
            pluginval-binary: ./pluginval.exe

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up MSVC (Windows only)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Clone JUCE
        run: git clone --branch ${{ env.JUCE_VERSION }} --depth 1 https://github.com/juce-framework/JUCE.git

      - name: Verify custom juce_Slider.h exists
        run: |
          if [ ! -f "./juce_Slider.h" ]; then
            echo "Error: juce_Slider.h not found in repository root"
            exit 1
          fi
          echo "Custom juce_Slider.h found"
        shell: bash

      - name: Backup original and replace juce_Slider
        run: |
          cp ./juce_Slider.h JUCE/modules/juce_gui_basics/widgets/
          cp ./juce_Slider.cpp JUCE/modules/juce_gui_basics/widgets/
        shell: bash

      - name: Verify custom enums are present
        run: |
          if grep -q "MayT_PhaseKnob\|MayT_DirectionKnob\|MayT_VariationKnob" JUCE/modules/juce_gui_basics/widgets/juce_Slider.h; then
            echo "Custom slider styles found in juce_Slider.h"
          else
            echo "Error: Custom slider styles not found in juce_Slider.h"
            echo "Contents of juce_Slider.h:"
            head -50 JUCE/modules/juce_gui_basics/widgets/juce_Slider.h
            exit 1
          fi
        shell: bash

      - name: Configure with CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Find and list build artifacts
        run: |
          echo "Searching for build artifacts..."
          find build -name "*.vst3" -o -name "*.component" -o -name "*.dll" -o -name "*.so" -o -name "*.dylib" | head -20
          echo "Build directory structure:"
          ls -la build/
        shell: bash

      - name: Upload VST3 Plugin (All platforms)
        uses: actions/upload-artifact@v4
        with:
          name: BallPit-VST3-${{ matrix.os }}
          path: |
            build/**/*.vst3
            build/**/BallPit.vst3
          if-no-files-found: warn

      - name: Upload macOS Component (macOS only)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: BallPit-Component-macOS
          path: |
            build/**/*.component
            build/**/BallPit.component
          if-no-files-found: ignore

      - name: Setting up Pluginval
        run: |
          curl -LO "https://github.com/Tracktion/pluginval/releases/download/v1.0.3/pluginval_${{ matrix.name }}.zip"
          7z x pluginval_${{ matrix.name }}.zip
          echo "=== Contents after extraction ==="
          ls -la
          echo "=== Looking for pluginval executables ==="
          find . -name "*pluginval*" -o -name "*Pluginval*"
        shell: bash

      - name: Running Pluginval
        if: runner.os == 'windows'
        run: |
          VST3_PATH=$(find . -name "BallPit.vst3" -path "*/x86_64-win/*" -type f | head -1)
          if [ -n "$VST3_PATH" ]; then
            echo "Found VST3 at: $VST3_PATH"
            ./pluginval --strictness-level 10 --validate-in-process --output-dir validation_results "$VST3_PATH"
          else
            echo "VST3 plugin not found!"
            exit 1
          fi
        shell: bash

      - name: Running Pluginval
        if: runner.os == 'macos'
        run: |
          VST3_PATH=$(find . -name "*.vst3" -path "*/VST3/*" -type d | head -1)
          if [ -n "$VST3_PATH" ]; then
            echo "Found VST3 at: $VST3_PATH"
            # Try different possible pluginval locations
            if [ -f "./pluginval" ]; then
              ./pluginval --strictness-level 10 --validate-in-process --output-dir validation_results "$VST3_PATH"
            elif [ -f "./Pluginval.app/Contents/MacOS/Pluginval" ]; then
              ./Pluginval.app/Contents/MacOS/Pluginval --strictness-level 10 --validate-in-process --output-dir validation_results "$VST3_PATH"
            elif [ -f "./pluginval.app/Contents/MacOS/pluginval" ]; then
              ./pluginval.app/Contents/MacOS/pluginval --strictness-level 10 --validate-in-process --output-dir validation_results "$VST3_PATH"
            else
              echo "Pluginval executable not found! Available files:"
              ls -la
              exit 1
            fi
          else
            echo "VST3 plugin not found!"
            exit 1
          fi
        shell: bash
