name: Cross-platform JUCE Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JUCE_VERSION: 8.0.7

jobs:
  build:
    name: Build - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # - name: Install dependencies (Linux only)
      # if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y \
      #       libasound2-dev \
      #       libjack-jackd2-dev \
      #       libx11-dev \
      #       libxrandr-dev \
      #       libxinerama-dev \
      #       libxcursor-dev \
      #       libxcomposite-dev \
      #       libglu1-mesa-dev \
      #       freeglut3-dev \
      #       libfreetype6-dev

      - name: Set up MSVC (Windows only)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Clone JUCE
        run: git clone --branch ${{ env.JUCE_VERSION }} --depth 1 https://github.com/juce-framework/JUCE.git

      - name: Verify custom juce_Slider.h exists
        run: |
          if [ ! -f "./juce_Slider.h" ]; then
            echo "Error: juce_Slider.h not found in repository root"
            exit 1
          fi
          echo "Custom juce_Slider.h found"
        shell: bash

      - name: Backup original and replace juce_Slider.h
        run: |
          # Backup original
          cp JUCE/modules/juce_gui_basics/widgets/juce_Slider.h JUCE/modules/juce_gui_basics/widgets/juce_Slider.h.original
          # Replace with custom version
          cp ./juce_Slider.h JUCE/modules/juce_gui_basics/widgets/juce_Slider.h
          # Verify replacement
          echo "File replaced successfully"
        shell: bash

      - name: Verify custom enums are present
        run: |
          if grep -q "MayT_PhaseKnob\|MayT_DirectionKnob\|MayT_VariationKnob" JUCE/modules/juce_gui_basics/widgets/juce_Slider.h; then
            echo "Custom slider styles found in juce_Slider.h"
          else
            echo "Error: Custom slider styles not found in juce_Slider.h"
            echo "Contents of juce_Slider.h:"
            head -50 JUCE/modules/juce_gui_basics/widgets/juce_Slider.h
            exit 1
          fi
        shell: bash

      - name: Configure with CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Find and list build artifacts
        run: |
          echo "Searching for build artifacts..."
          find build -name "*.vst3" -o -name "*.component" -o -name "*.dll" -o -name "*.so" -o -name "*.dylib" | head -20
          echo "Build directory structure:"
          ls -la build/
        shell: bash

      - name: Upload VST3 Plugin (All platforms)
        uses: actions/upload-artifact@v4
        with:
          name: BallPit-VST3-${{ matrix.os }}
          path: |
            build/**/*.vst3
            build/**/BallPit.vst3
          if-no-files-found: warn

      - name: Upload macOS Component (macOS only)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: BallPit-Component-macOS
          path: |
            build/**/*.component
            build/**/BallPit.component
          if-no-files-found: ignore    


  validate:
    name: Validate - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Download pluginval
        run: |
          curl -L "https://github.com/Tracktion/pluginval/releases/latest/download/pluginval_macOS.zip" -o pluginval.zip
          unzip pluginval

      - name: Run pluginval validation
        if: runner.os == 'macos'
        run: |
          chmod +x pluginval/pluginval.app/Contents/MacOS/pluginval
          mkdir -p logs
          ./pluginval/pluginval.app/Contents/MacOS/pluginval \
            --validate-in-process \
            --strictness-level 5 \
            --output-dir logs \
            --validate /Users/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build/**/BallPit.vst3 || exit 1
        if: runner.os == 'windows'
        run: |
          chmod +x ./pluginval.exe
          mkdir -p logs
          ./pluginval.exe \
            --validate-in-process \
            --strictness-level 5 \
            --output-dir logs \
            --validate /Users/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build/**/BallPit.vst3 || exit 1
